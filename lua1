-- Credits To The Original Devs @xz, @goof
getgenv().Config = {
	Invite = "mewzeee",
	Version = "0.1",
}

getgenv().luaguardvars = {
	DiscordName = "mewzeee",
}

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drillygzzly/Other/main/1"))()

library:init() -- Initializes Library Do Not Delete This

local Window = library.NewWindow({
	title = "mewzeee",
	size = UDim2.new(0, 525, 0, 650)
})

local tabs = {
    Aim = Window:AddTab("Aim"),
	Settings = library:CreateSettingsTab(Window),
}

-- 1 = Set Section Box To The Left
-- 2 = Set Section Box To The Right

local sections = {
	Section1 = tabs.Aim:AddSection("Weapon Mods", 1),
	Section2 = tabs.Aim:AddSection("Silent Aim", 2),
}

-- Infinite Ammo Toggle
sections.Section1:AddToggle({
	enabled = false,
	text = "Infinite Ammo",
	flag = "Toggle_1",
	tooltip = "Tooltip1",
	risky = true, -- turns text to red and sets label to risky
	callback = function(state)
        isToggled = state
        if isToggled then
            for _, player in ipairs(Players:GetPlayers()) do
                task.spawn(continuouslyUpdateWeaponStats, player)
            end
        end
	end
})

-- Rapid Fire Toggle
sections.Section1:AddToggle({
	enabled = false,
	text = "Rapid Fire",
	flag = "Toggle_2",
	tooltip = "Tooltip2",
	risky = true, -- turns text to red and sets label to risky
	callback = function(state)
        toggleEnabled = state
        if localPlayer.Character then
            for _, child in ipairs(localPlayer.Character:GetChildren()) do
                if child:IsA("Tool") then
                    if toggleEnabled then
                        enableOneShot(child)
                    else
                        disableOneShot(child)
                    end
                end
            end
        end
	end
})





local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local isToggled = false -- Toggle state for Infinite Ammo
local toggleEnabled = false -- Toggle state for Rapid Fire
local fireRateValue = 0.147 -- Default fire rate value controlled by the slider

-- Function to continuously update weapon stats for Infinite Ammo
local function continuouslyUpdateWeaponStats(player)
    while isToggled do 
        local backpack = player:FindFirstChild("Backpack")
        if backpack then
            -- Loop through all items in the backpack
            for _, item in ipairs(backpack:GetChildren()) do
                if item:IsA("Tool") then 
                    if item:FindFirstChild("Ammo") and item:FindFirstChild("Mag") then
                        item.Ammo.Value = 18
                        item.Mag.Value = 9
                    end
                end
            end
        end
        task.wait(0.1) -- Prevent infinite loops from freezing the game
    end
end

-- Function to enable one-shot with adjustable fire rate
local function enableOneShot(tool)
    if tool:IsA("Tool") then
        local settingsModule = tool:FindFirstChild("Settings")
        if settingsModule and settingsModule:IsA("ModuleScript") then
            local success, settings = pcall(require, settingsModule)
            if success and type(settings) == "table" and settings.BaseDamage ~= nil then
                settings.FireRate = fireRateValue -- Use the slider's fire rate value
                settings.Auto = true -- Enable rapid fire
            else
                warn("Failed to load settings for tool:", tool.Name)
            end
        else
            warn("Settings module not found in tool:", tool.Name)
        end
    end
end

-- Function to disable one-shot
local function disableOneShot(tool)
    if tool:IsA("Tool") then
        local settingsModule = tool:FindFirstChild("Settings")
        if settingsModule and settingsModule:IsA("ModuleScript") then
            local success, settings = pcall(require, settingsModule)
            if success and type(settings) == "table" and settings.BaseDamage ~= nil then
                settings.Auto = false -- Disable rapid fire
            else
                warn("Failed to load settings for tool:", tool.Name)
            end
        else
            warn("Settings module not found in tool:", tool.Name)
        end
    end
end


-- Handle new players joining
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if isToggled then
            task.spawn(continuouslyUpdateWeaponStats, player)
        end
    end)
end)

-- Initialize for existing players
if isToggled then
    for _, player in ipairs(Players:GetPlayers()) do
        task.spawn(continuouslyUpdateWeaponStats, player)
    end
end
